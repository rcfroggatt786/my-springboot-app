events { worker_connections 1024;
}
http { include /etc/nginx/mime.types; default_type application/octet-stream;
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent 
                    "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main; error_log /var/log/nginx/error.log warn;
    # Basic settings
    sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048;
    # Gzip compression
    gzip on; gzip_vary on; gzip_proxied any; gzip_comp_level 6; gzip_types text/plain text/css text/xml 
    text/javascript application/json application/javascript application/xml+rss application/atom+xml 
    image/svg+xml;
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s; upstream springboot { server app:8080; 
        keepalive 32;
    }
    # Redirect HTTP to HTTPS
    server { listen 80; server_name _;
        
        # Let's Encrypt challenge directory
        location /.well-known/acme-challenge/ { root /var/www/html;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / { return 301 https://$host$request_uri;
        }
    }
    # HTTPS server
    server { listen 443 ssl http2; server_name _;
        # SSL configuration
        ssl_certificate /etc/ssl/certs/fullchain.pem; ssl_certificate_key /etc/ssl/certs/privkey.pem;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3; ssl_ciphers 
        ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384; 
        ssl_prefer_server_ciphers off; ssl_session_cache shared:SSL:10m; ssl_session_timeout 10m;
        
        # OCSP stapling
        ssl_stapling on; ssl_stapling_verify on;
        
        # Security headers
        add_header X-Frame-Options "DENY" always;
	add_header X-Content-Type-Options "nosniff" always; 
        add_header X-XSS-Protection "1; mode=block" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	add_header Referrer-Policy "strict-origin-when-cross-origin" always;
	add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline';" always;
        # Health check endpoint (bypass rate limiting)
        location /actuator/health { proxy_pass http://springboot; proxy_set_header Host $host; 
            proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For 
            $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; access_log off;
        }
        # API endpoints with rate limiting
        location /api/ { limit_req zone=api burst=20 nodelay; proxy_pass http://springboot; proxy_set_header 
            Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For 
            $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header 
            X-Forwarded-Host $host; proxy_set_header X-Forwarded-Port $server_port; proxy_http_version 1.1; 
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 30s; proxy_send_timeout 30s; proxy_read_timeout 30s;
        }
        # All other requests
        location / { proxy_pass http://springboot; proxy_set_header Host $host; proxy_set_header X-Real-IP 
            $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header 
            X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Host $host; proxy_set_header 
            X-Forwarded-Port $server_port; proxy_http_version 1.1; proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 30s; proxy_send_timeout 30s; proxy_read_timeout 30s;
        }
    }
}
